version: '3.8'

networks:
  codetrekking:
    external: true
    name: codetrekking

volumes:
  rabbitmq_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${ROOT}/storage/rabbitmq_data

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    container_name: rabbitmq_broker
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST:-/}
      - RABBITMQ_ERLANG_COOKIE=codetrekking-rabbitmq-cluster
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ${DOCKER_DIR}/config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ${DOCKER_DIR}/config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ${DOCKER_DIR}/config/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    networks:
      - codetrekking
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
