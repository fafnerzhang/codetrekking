version: '3.7'

services:
  minio:
    image: minio/minio:${MINIO_VERSION}
    restart: always
    command: server /data --console-address ":9001"
    deploy:
      mode: global
      placement:
        constraints:
        - node.role==manager
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M
      restart_policy:
        condition: on-failure
    volumes:
      - ${ROOT}/storage/minio_data:/data:z
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL}
      MINIO_SERVER_URL: ${MINIO_SERVER_URL}
    networks:
      - codetrekking
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 60s

  # Optional: MinIO Client for initial setup and bucket creation
  minio-client:
    image: minio/mc:${MC_VERSION}
    deploy:
      mode: global
      placement:
        constraints:
        - node.role==manager
      restart_policy:
        condition: none
    depends_on:
      - minio
    volumes:
      - ${DOCKER_DIR}/config/minio/init:/scripts:ro,z
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SERVER_URL: ${MINIO_SERVER_URL}
    networks:
      - codetrekking
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb myminio/fitness-data --ignore-existing;
      mc mb myminio/garmin-files --ignore-existing;
      mc mb myminio/processed-data --ignore-existing;
      mc mb myminio/backups --ignore-existing;
      mc anonymous set public myminio/fitness-data;
      echo 'MinIO buckets created successfully';
      exit 0;
      "

volumes:
  minio_data:
    driver: local

networks:
  codetrekking:
    external: true
